#ifndef SYMBOL_TAB_H#define SYMBOL_TAB_H#ifndef _DEFINES_H#include        "defines.h"#endif#ifndef STRUCTS_H#include        "structs.h"#endif#ifndef __MACIO_H#include		"macio.h"#endif#ifndef MEMORY_H#include 		"mmemory.h"#endiftypedef  struct {	short line_no;	/*this symbol is displayed beggining at line line_no*/	short size;		/*number of bytes for this item*/	short elines;	/*last line used to display items*/	short nitemspl;	/*number of items to display per line*/	char  type;		/*object type as declared at as time*/	char  format;	/*display format*/} extra_symtab_info_type;typedef  struct{	char  name[64]; /*Name of file*/	short vrefnum; 	/*mac directory file is in*/	MFILE			*fsym;		/* File descriptor for object file    */	long       		magic;		/* Object file magic number           */	MAP				txtmap;		/* Address maps                       */	unsigned long	txtsiz;		/* Size of text segment               */	unsigned long	datsiz;		/* Size of data segment               */	unsigned long	bsssiz;		/* Size of BSS segment                */	unsigned long	entrypt;	/* Object file entry point            */	unsigned long	symnum;		/* Number of symbols in symbol table  */	SYMTAB			*symvec;	/* Symbols                            */	STRING			strtab;		/* String table                       */	long			ndata_lines; /*Number of data lines to display in lmemw*/	extra_symtab_info_type *esymtab; /*additional symbol table info for DATA*/	long			ndata_items; /*Number of data items in the symbol table*/	SYMTAB 			*first_data_ent; /*first data item in symbol table*/	SYMTAB 			*last_symtab_ent;/*last data item in symbol table */	char			*bit_map;		/* maps addresses to instruction starts */	int 			ref_count;} Symbol_Table_Type;#define NUMBER_PROGS	32#ifdef _SYMBOL_TAB_C_	address 		Process_Control_Block[NUMBER_PROGS];	Symbol_Table_Type *process_table[NUMBER_PROGS];	Symbol_Table_Type *current_process = 0;	Symbol_Table_Type *sys_process = 0;#else  _SYMBOL_TAB_C_	extern address 		Process_Control_Block[NUMBER_PROGS];	extern Symbol_Table_Type *process_table[NUMBER_PROGS];	extern Symbol_Table_Type *current_process;	extern Symbol_Table_Type *sys_process;#endif _SYMBOL_TAB_C_/*Functions*/long round_it(	long a,	long b);char * my_sbrk(	long incr);void init_proc_tab(void);long alloc_proc_table_entry(	long sys_proc);long create_symbol_table(	MFILE *fp,	long sys_proc);long duplicate_symbol_table(	long process_desc);long use_user_symbol_table(	long process_desc);long free_symboltable(	long process_table_index);void free_all_symboltable(void);long get_mac_filename_pd(	/*copies the MFILE->name and MFILE->vrefnum to VAX memory dest*/	unsigned long process_table_index,	address dest);int comp_elements(	const SYMTAB *e1, 	const SYMTAB *e2);long setsym(	Symbol_Table_Type *st);#endif SYMBOL_TAB_H