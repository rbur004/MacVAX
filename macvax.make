#   File:       macvax.make#   Target:     macvax#   Created:    Wednesday, February 24, 1988 19:05:11LIBFLAGS = -sym full	LINKFLAGS = -sym full -ad 4	ASMFLAGS = -sym fullLIB = lib {LIBFLAGS}ASM = asm {ASMFLAGS}#CC = gcCC=CLINK = Link {LINKFLAGS} # removed from CFLAGS as it seems to generate bad code? -finline-functions#CFLAGS =  -i ::mstdioÄ3.0: -r -opt full  -fstrength-reduce -ansiCFLAGS =  -i ::mstdioÄ3.0: -r -sym fulldefines.h Ä a.out.h	touch defines.hglobals.h Ä defines.h structs.h 	touch globals.hinstr.h Ä globals.h	touch instr.hmemory.h Ä globals.h	touch memory.hinstrs_tab.h Ä func.h	touch instrs_tab.hmain.c.o Ä	main.c main.h ¶			a.out.h globals.h defines.h structs.h gotod.h ¶			window.h defines.h lmem.h controldef.h memory.h ¶			process.h	{CC} {CFLAGS} main.cdocmds.c.o Ä	docmds.c docmds.h stackw.h ¶				memory.h window.h main.h  process.h display_process.h ¶				a.out.h globals.h defines.h structs.h controldef.h	{CC} {CFLAGS} docmds.cprocess.c.o Ä	process.c process.h ¶				memory.h process.h 	{CC} {CFLAGS} process.cwindow.c.o Ä	window.c window.h ¶				main.h  memory.h ¶				iow.h progw.h lmem.h hexdump.h decdump.h regw.h stackw.h ¶				a.out.h defines.h structs.h globals.h controldef.h	{CC} {CFLAGS} window.cmemory.c.o Ä	memory.c memory.h ¶				vax.h defines.h 	{CC} {CFLAGS} memory.c	vaxmacio.c.o Ä  vaxmacio.c vaxmacio.h ¶				 memory.h 	{CC} {CFLAGS}  vaxmacio.c	macdev.c.o Ä  macdev.c macdev.h ¶				memory.h symbol_tab.h window.h sysw.h	{CC} {CFLAGS}  macdev.c	symbol_tab.c.o Ä	symbol_tab.c symbol_tab.h ¶			a.out.h defines.h structs.h vaxmacio.h memory.h display_process.h	{CC} {CFLAGS} symbol_tab.c	display_process.c.o Ä	display_process.c display_process.h ¶			display_process.h memory.h	{CC} {CFLAGS} display_process.c	globals.c.o Ä	globals.c  globals.h ¶					a.out.h defines.h structs.h 	{CC} {CFLAGS} globals.c	patch_a.out.c.o Ä 	patch_a.out.c patch_a.out.h  ¶					a.out.h	{CC} {CFLAGS} patch_a.out.c	vax_to_68000.c.o Ä	vax_to_68000.c vax_to_68000.h memory.h 	{CC} {CFLAGS} vax_to_68000.c	printins.c.o Ä	printins.c printins.h ¶				instrs.h ¶				a.out.h defines.h structs.h globals.h memory.h	{CC} {CFLAGS} printins.c	execute.c.o Ä	execute.c execute.h  ¶				instrs.h memory.h exception.h docmds.h ¶				a.out.h defines.h structs.h globals.h	{CC} {CFLAGS} execute.c	flt_imm.c.o Ä flt_imm.c	C flt_imm.c -o flt_imm.c.o	instr.c.o Ä	instr.c instrs.h instrs_tab.h  ¶				func.h ¶				a.out.h defines.h structs.h globals.h	{CC} {CFLAGS} instr.c	sym.c.o Ä	sym.c sym.h  ¶			lmem.h ¶			a.out.h defines.h structs.h symbol_tab.h	{CC} {CFLAGS} sym.c	vax.c.o Ä	vax.c vax.h ¶			memory.h window.h xfc.h arithmetic_fault.h stackw.h progw.h symbol_tab.h	{CC} {CFLAGS} vax.c	exception.c.o Ä	exception.c exception.h ¶			memory.h  arithmetic_fault.h clock.h iow.h ¶			docmds.h macdev.h execute.h func.h	{CC} {CFLAGS} exception.c	clock.c.o Ä clock.c clock.h ¶			memory.h 	{CC} {CFLAGS} clock.c	physmem.c.o Ä	physmem.c physmem.h ¶			window.h main.h  memory.h	{CC} {CFLAGS} physmem.c	hexdump.c.o Ä	hexdump.c hexdump.h ¶			window.h main.h  memory.h 	{CC} {CFLAGS} hexdump.c	decdump.c.o Ä	decdump.c decdump.h ¶			window.h main.h  memory.h 	{CC} {CFLAGS} decdump.c	lmem.c.o Ä	lmem.c lmem.h ¶			window.h main.h memory.h ¶			a.out.h defines.h structs.h globals.h	{CC} {CFLAGS} lmem.c	progw.c.o Ä	progw.c progw.h ¶			window.h memory.h symbol_tab.h display_process.h	{CC} {CFLAGS} progw.c	iow.c.o Ä	iow.c iow.h ¶			window.h memory.h 	{CC} {CFLAGS} iow.c	regw.c.o Ä	regw.c regw.h ¶			window.h main.h defines.h memory.h 	{CC} {CFLAGS} regw.c	sysw.c.o Ä	sysw.c sysw.h ¶			window.h main.h defines.h memory.h 	{CC} {CFLAGS} sysw.c	stackw.c.o Ä	stackw.c stackw.h ¶			window.h main.h defines.h memory.h 	{CC} {CFLAGS} stackw.c	startup.c.o Ä startup.c startup.h ¶			   globals.h window.h 	{CC} {CFLAGS} startup.csettings.c.o Ä settings.c settings.h ¶			  memory.h window.h main.h 	{CC} {CFLAGS} settings.c	gotod.c.o Ä gotod.c gotod.h ¶			  memory.h  	{CC} {CFLAGS} gotod.cmenu.r.o Ä menu.r	rez -a menu.r -o macvax	setfile -m . menu.r.o	controldef.r.o Ä controldef.r	rez -a controldef.r -o macvax	setfile -m . controldef.r.o	version.r.o Ä version.r	rez -a version.r -o macvax	setfile -m . version.r.o	launch.a.o Ä launch.a	{ASM} launch.alib_windows.o Ä	 macvax.make¶		window.c.o ¶		progw.c.o ¶		regw.c.o ¶		sysw.c.o ¶		stackw.c.o ¶		iow.c.o ¶		physmem.c.o ¶		hexdump.c.o ¶		decdump.c.o ¶		lmem.c.o ¶		gotod.c.o	{LIB} -w -o  lib_windows.o ¶		window.c.o ¶		progw.c.o ¶		regw.c.o ¶		sysw.c.o ¶		stackw.c.o ¶		iow.c.o ¶		physmem.c.o ¶		hexdump.c.o ¶		decdump.c.o ¶		lmem.c.o ¶		gotod.c.o			lib_vax.o Ä  macvax.make¶		startup.c.o ¶		settings.c.o ¶		symbol_tab.c.o ¶		display_process.c.o ¶		globals.c.o ¶		patch_a.out.c.o  ¶		vax_to_68000.c.o ¶		sym.c.o ¶		docmds.c.o ¶		process.c.o ¶		instr.c.o ¶		vax.c.o ¶		exception.c.o ¶		memory.c.o ¶		vaxmacio.c.o ¶		printins.c.o ¶		execute.c.o ¶		flt_imm.c.o ¶		clock.c.o ¶		macdev.c.o	{LIB} -w -o  lib_vax.o ¶		startup.c.o ¶		settings.c.o ¶		symbol_tab.c.o ¶		display_process.c.o ¶		globals.c.o ¶		patch_a.out.c.o  ¶		vax_to_68000.c.o ¶		sym.c.o ¶		docmds.c.o ¶		process.c.o ¶		instr.c.o ¶		vax.c.o ¶		exception.c.o ¶		memory.c.o ¶		vaxmacio.c.o ¶		printins.c.o ¶		execute.c.o ¶		flt_imm.c.o ¶		clock.c.o ¶		macdev.c.omacvax ÄÄ  menu.r.o controldef.r.o version.r.omacvax ÄÄ  macvax.make  ¶		lib_windows.o ¶		lib_vax.o ¶		main.c.o ¶		launch.a.o	{LINK} -t APPL -c 'VSIM' -o macvax ¶		main.c.o ¶		launch.a.o ¶		lib_windows.o ¶		lib_vax.o ¶		::mstdioÄ3.0:mstdio.o ¶		"{CLibraries}"CSANELib.o ¶		"{CLibraries}"Math.o ¶		"{CLibraries}"StdClib.o ¶#		"{CLibraries}"Cinterface.o ¶#		"{CLibraries}"CRuntime.o ¶		"{Libraries}"Interface.o¶		"{Libraries}"Runtime.o #MPW3.2 use "{Libraries}"Runtime.o in place of#"{CLibraries}"Cinterface.o  & "{CLibraries}"CRuntime.ocontroldef.c.o Ä controldef.c controldef.h		{CC} -sym full  controldef.cmacvax ÄÄ   controldef.c.o		link -sym full -rt CDEF=128 -ra =16 -m "BUTTONARRAY" -sn Main=ButtonArray ¶			controldef.c.o ¶			-o macvax controldef2.c.o Ä controldef2.c controldef.h		{CC} -sym full  controldef2.cmacvax ÄÄ   controldef2.c.o		link -sym full -rt CDEF=129 -ra =16 -m "PROCESSBUTTONARRAY" -sn Main=ProcessButtonArray ¶			controldef2.c.o ¶			-o macvax controldef3.c.o Ä controldef3.c controldef.h		{CC} -sym full  controldef3.cmacvax ÄÄ   controldef3.c.o		link -sym full -rt CDEF=130 -ra =16 -m "STACKBUTTONARRAY" -sn Main=StackButtonArray ¶			controldef3.c.o ¶			-o macvax macvax ÄÄ rom.d	rez  -a rom.r -o macvax 		rom.d Ä create_rom_data		create_rom_data		create_rom_data Ä create_rom_data.c.o	Link -w -c 'MPS ' -t MPST -o create_rom_data ¶		create_rom_data.c.o ¶ 		"{CLibraries}"CSANELib.o ¶ 		"{CLibraries}"Math.o ¶ 		"{CLibraries}"StdClib.o ¶# 		"{CLibraries}"CInterface.o ¶ 		"{Libraries}"Stubs.o ¶# 		"{CLibraries}"CRuntime.o ¶ 		"{Libraries}"Interface.o ¶ 		"{Libraries}"ToolLibs.o ¶		"{Libraries}"Runtime.o #MPW3.2 use "{Libraries}"Runtime.o in place of#"{CLibraries}"Cinterface.o  & "{CLibraries}"CRuntime.o		create_rom_data.c.o Ä create_rom_data.c	 {CC}  create_rom_data.c