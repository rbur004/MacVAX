#ifndef INSTRS_H#define INSTRS_H#ifndef GLOBALS_H#include        "globals.h"#endif/*Argument access types*/#define ACCR (1 << 4 )               /* read                               */#define ACCW (2 << 4 )               /* write                              */#define ACCM (3 << 4 )               /* modify                             */#define ACCB (4 << 4 )               /* branch displacement                */#define ACCA (8 << 4 )               /* address only                       *//*Argument data types*/#define	TYPB		000	/* byte integer */#define	TYPW		001	/* word integer */#define	TYPL		002	/* long integer */#define	TYPQ		003	/* quad integer */#define	TYPO		004	/* octa integer */#define	TYPF		005	/* F float */#define	TYPD		006	/* D float */#define	TYPG		007	/* G float */#define	TYPH		010	/* H float *//*#define	TYPUNPACKED	011	/* when unpacked into mantissa & exponent *//*#define	TYPNONE		012	/* when nothing */#define	TYPLG		4	/* number of bits the above take up *//*Argument sizes*/#ifdef INSTRS_Clong v_size_of[] = {	1,                      		    /* byte                               */	2,                      		    /* word                               */	4,                      		    /* long                               */	8,                      		    /* quad                               */	16,									/* oct */	4,                     			    /* floating                           */	8,	          	      	   		    /* double floating                    */	8,									/*gfloat*/	16									/*hfloat*/};	#else 	INSTRS_Cextern long v_size_of[];#endif 	INSTRS_Cstruct optab {    char *iname;    char val;    char nargs;    char argtype[ 6 ]; 	void  (*ins_fnc)(char *);  };typedef struct optab *OPTAB;#ifdef INSTRS_Cstruct optab optab[ ] = {#include "instrs_tab.h"    0};long ioptab[ 256 ];  #else 	INSTRS_Cextern struct optab optab[ ];extern long   ioptab[ 256 ];  #endif 	INSTRS_Cvoid setupioptab(void);#endif INSTRS_H