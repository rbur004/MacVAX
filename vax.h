#ifndef VAX_H#define VAX_H#ifdef VAX_Ctypedef union{	unsigned long l;	unsigned short s[2];}sl;#define lo(x) x.s[1]#define hi(x) x.s[0]#define ul unsigned long#define EQL( a, b ) ((a)==(b))#define LEQU( a, b ) ((( unsigned long)a )<= (( unsigned long)b))#define LEQ(a,b) ( (a) <= (b))#define LSS( a, b ) ((a) < (b))#define LSSU( a, b ) ((( unsigned long) a) < (( unsigned long) b))#define NEQ( a, b ) ((a)!=(b))#define GTR(a,b) ((a)>(b))#define GEQ(a,b) ((a)>=(b))#define SETNZ(a, b ) N = LSS( a, b ); \				    		Z = EQL( a,b );/*Functions*/static void chmx(	long mode);static unsigned long movcx(	register unsigned long src,	register unsigned long dst,	register unsigned long len);static void process_entry_mask(	long s 	/*calls s == 1, callg s == 0*/);static unsigned long mem_fill(	register unsigned long dst,	char fill,	register unsigned long len);#endif VAX_C#endif VAX_H